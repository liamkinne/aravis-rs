// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../gir-files
// DO NOT EDIT

use crate::{ffi, DomElement, DomNode, GcFeatureNode, GcNode};

glib::wrapper! {
///
///
/// This is an Abstract Base Class, you cannot instantiate it.
///
/// # Implements
///
/// [`GcFeatureNodeExt`][trait@crate::prelude::GcFeatureNodeExt], [`GcNodeExt`][trait@crate::prelude::GcNodeExt], [`DomElementExt`][trait@crate::prelude::DomElementExt], [`DomNodeExt`][trait@crate::prelude::DomNodeExt], [`trait@glib::ObjectExt`]
	#[doc(alias = "ArvGcConverter")]
	pub struct GcConverter(Object<ffi::ArvGcConverter, ffi::ArvGcConverterClass>) @extends GcFeatureNode, GcNode, DomElement, DomNode;

	match fn {
		type_ => || ffi::arv_gc_converter_get_type(),
	}
}

impl GcConverter {
	pub const NONE: Option<&'static GcConverter> = None;
}

unsafe impl Send for GcConverter {}
