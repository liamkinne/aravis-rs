// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../gir-files
// DO NOT EDIT

use crate::{ffi, Stream};
use glib::translate::*;

glib::wrapper! {
///
///
/// ## Properties
///
///
/// #### `usb-mode`
///  USB device I/O mode.
///
/// Writeable | Construct Only
/// <details><summary><h4>Stream</h4></summary>
///
///
/// #### `callback`
///  Readable | Writeable | Construct Only
///
///
/// #### `callback-data`
///  Readable | Writeable | Construct Only
///
///
/// #### `destroy-notify`
///  Readable | Writeable | Construct Only
///
///
/// #### `device`
///  Readable | Writeable | Construct Only
///
///
/// #### `emit-signals`
///  Readable | Writeable
/// </details>
///
/// # Implements
///
/// [`StreamExt`][trait@crate::prelude::StreamExt], [`trait@glib::ObjectExt`]
	#[doc(alias = "ArvUvStream")]
	pub struct UvStream(Object<ffi::ArvUvStream, ffi::ArvUvStreamClass>) @extends Stream;

	match fn {
		type_ => || ffi::arv_uv_stream_get_type(),
	}
}

impl UvStream {}

unsafe impl Send for UvStream {}
